dnl Process this file with autoconf to produce a configure script.
dnl $Id$
AC_INIT(main.c)
AC_CONFIG_HEADER(config.h)
AC_CANONICAL_SYSTEM

case "$build_os" in
  freebsd*)
	OS=FREEBSD
	;;
  solaris*)
##	LIBS="$LIBS -lsocket -lnsl -lresolv"
	OS=SOLARIS
	AC_DEFINE(SOLARIS)
	;;
  linux*)
	OS=LINUX
	;;
esac

CFLAGS="$CFLAGS -O2 -Wall"
LDFLAGS="$LDFLAGS -s"

if test -d /usr/local/include; then
    CPPFLAGS="-I/usr/local/include $CPPFLAGS"
fi
if test -d /usr/local/lib; then
    LIBS="-L/usr/local/lib $LIBS"
fi

dnl Checks for programs.
GCC=yes
AC_PROG_CC


#dnl Checks for libraries.

if test "$OS" = "SOLARIS"; then
    AC_CHECK_LIB(xnet, socket)
    AC_CHECK_LIB(resolv, gethostbyname)
    AC_CHECK_LIB(nsl, gethostbyname_r)
fi

AC_ARG_WITH(libwrap,
[ --with-libwrap[=PATH | yes | no]  with tcp_wrapper access control.],
libwrap="$withval",
libwrap="yes")
if test "$libwrap" != "no"; then
   if test "$libwrap" != "yes"; then
      if test -d "$libwrap"; then
         LIBS="-L$libwrap $LIBS"
      fi
   fi
   AC_CHECK_HEADER(tcpd.h, AC_DEFINE(HAVE_TCPD_H), tcpdh="no")
   if test "$tcpdh" != "no"; then
      AC_CHECK_LIB(wrap, hosts_ctl)
   fi
fi

AC_ARG_WITH(syslog-fac,
[ --with-syslog-fac=FACILITY   syslog facility (LOG_DAEMON).],
syslogfac="$withval",
syslogfac="no")
if test "$syslogfac" != "no"; then
  if test "$syslogfac" != "yes"; then
    AC_MSG_CHECKING([syslog facility is])
    AC_MSG_RESULT("$withval")
    echo "$withval" |grep "LOG_LOCAL" > /dev/null 2>&1
    r=$?
    if test $r -eq 0; then
      AC_DEFINE_UNQUOTED(LOCAL_FAC, $withval)
    else
      AC_DEFINE_UNQUOTED(SYSLOG_FAC, $withval)
    fi
  fi
fi

AC_ARG_ENABLE(thread,
[ --disable-thread	force disable threading.],
thread="$enableval",
thread="yes")
if test "$thread" != "no"; then
    AC_CHECK_HEADER(pthread.h, header_ok="yes", header_ok="no")
    if test "$header_ok" = "yes"; then
	AC_MSG_CHECKING([whether enabling thread])
	save_CFLAGS="$CFLAGS";
	if test "$OS" = "FREEBSD"; then
	    CFLAGS="$CFLAGS -pthread"
	fi
	save_LDFLAGS="$LDFLAGS"
	if test "$OS" = "FREEBSD" -o "$OS" = "LINUX"; then
	    LDFLAGS="$LDFLAGS -pthread"
	elif test "$OS" = "SOLARIS"; then
	    LDFLAGS="$LDFLAGS -lpthread"
	fi
	AC_TRY_RUN(
[#include <pthread.h>
void
init_routine()
{
    return(0);
}
main()
{
    pthread_once_t once_control = PTHREAD_ONCE_INIT;
    pthread_once(&once_control, &init_routine);
    return(0);
}],
	AC_DEFINE(USE_THREAD) AC_MSG_RESULT([yes]),
	CFLAGS="$save_CFLAGS"; LDFLAGS="$save_LDFLAGS"; AC_MSG_RESULT([no])
	)
    fi
fi

AC_CHECK_LIB(crypt, crypt)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/time.h limits.h syslog.h unistd.h\
	resolv.h arpa/nameser.h sys/resource.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_CHECK_TYPES(socklen_t,
	[AC_DEFINE(HAVE_SOCKLEN_T)],,
	[#include <sys/types.h>
#include <sys/socket.h>])

AC_HEADER_TIME

AC_CHECK_MEMBER(struct sockaddr_dl.sdl_family,
	[AC_DEFINE(HAVE_SOCKADDR_DL_STRUCT)],,
	[#include <sys/types.h>
#include <net/if_dl.h>])

AC_CHECK_MEMBER(struct sockaddr.sa_len,
	[AC_DEFINE(HAVE_SOCKADDR_SA_LEN)],,
	[#include <sys/types.h>
#include <sys/socket.h>])

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(select\
		socket\
		inet_addr\
		inet_pton\
		inet_ntop\
		gethostbyname_r)

AC_OUTPUT(Makefile)
